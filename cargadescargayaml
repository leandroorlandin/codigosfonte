import yaml
from urllib.parse import urlparse
import requests

def resolve_references(input_file):
    def process_ref(ref):
        parts = urlparse(ref)
        if parts.scheme in ["http", "https"]:
            response = requests.get(ref)
            return yaml.safe_load(response.text)
        else:
            if parts.path:
                with open(parts.path) as f:
                    return yaml.safe_load(f)
            else:
                return None
    
    def traverse(obj):
        if isinstance(obj, dict):
            if "$ref" in obj:
                ref = obj["$ref"]
                del obj["$ref"]
                resolved_obj = process_ref(ref)
                if resolved_obj:
                    obj.update(resolved_obj)
            for value in obj.values():
                traverse(value)
        elif isinstance(obj, list):
            for item in obj:
                traverse(item)
    
    with open(input_file) as f:
        data = yaml.safe_load(f)
        traverse(data)
        return data

def save_yaml(data, output_file):
    with open(output_file, "w") as f:
        yaml.dump(data, f)

input_file = "openAPI.yaml"
output_file = "openAPI-compiled.yaml"

resolved_data = resolve_references(input_file)
save_yaml(resolved_data, output_file)
``
